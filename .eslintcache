[{"/Users/andrew.b.truong/Development/mywizard-type/src/App.js":"1","/Users/andrew.b.truong/Development/a-dull-boy-types/src/index.js":"2","/Users/andrew.b.truong/Development/a-dull-boy-types/src/reportWebVitals.js":"3","/Users/andrew.b.truong/Development/a-dull-boy-types/src/App.js":"4","/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/account/account.component.jsx":"5","/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/homepage/homepage.component.jsx":"6","/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/config/configpage.component.jsx":"7","/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/leaderboard/leaderboardpage.component.jsx":"8","/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/wordGenerator/wordGenerator.component.jsx":"9","/Users/andrew.b.truong/Development/a-dull-boy-types/src/hooks/useKeyPress.jsx":"10","/Users/andrew.b.truong/Development/a-dull-boy-types/src/utils/time.js":"11","/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/homepage/homepage.styled.jsx":"12","/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/wordGenerator/badWordGenerator.component.jsx":"13","/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/nsfwButton/nsfwButton.component.jsx":"14","/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/redoButton/redoButton.component.jsx":"15","/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/timer/timer.component.jsx":"16","/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/initialModeContext.jsx":"17","/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/sfwModeContext.jsx":"18","/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/wordContext.jsx":"19","/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/initialStateContext.jsx":"20"},{"size":1446,"mtime":1612159636248,"results":"21","hashOfConfig":"22"},{"size":500,"mtime":1613028098852,"results":"23","hashOfConfig":"24"},{"size":362,"mtime":1612161487345,"results":"25","hashOfConfig":"24"},{"size":2119,"mtime":1614516619048,"results":"26","hashOfConfig":"24"},{"size":385,"mtime":1612161902680,"results":"27","hashOfConfig":"24"},{"size":6129,"mtime":1614588770397,"results":"28","hashOfConfig":"24"},{"size":310,"mtime":1612161902680,"results":"29","hashOfConfig":"24"},{"size":303,"mtime":1612161902681,"results":"30","hashOfConfig":"24"},{"size":169,"mtime":1612407401564,"results":"31","hashOfConfig":"24"},{"size":2162,"mtime":1613980613529,"results":"32","hashOfConfig":"24"},{"size":54,"mtime":1612412464784,"results":"33","hashOfConfig":"24"},{"size":180,"mtime":1613429573679,"results":"34","hashOfConfig":"24"},{"size":382,"mtime":1612468923516,"results":"35","hashOfConfig":"24"},{"size":1556,"mtime":1614516640657,"results":"36","hashOfConfig":"24"},{"size":210,"mtime":1613979726131,"results":"37","hashOfConfig":"24"},{"size":520,"mtime":1614026407551,"results":"38","hashOfConfig":"24"},{"size":355,"mtime":1613980108511,"results":"39","hashOfConfig":"24"},{"size":328,"mtime":1614027502169,"results":"40","hashOfConfig":"24"},{"size":594,"mtime":1614424313189,"results":"41","hashOfConfig":"24"},{"size":1508,"mtime":1614583958180,"results":"42","hashOfConfig":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1e1tsek",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},"1thy0cg",{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"47"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"47"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/andrew.b.truong/Development/mywizard-type/src/App.js",["87"],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/index.js",[],["88","89"],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/reportWebVitals.js",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/App.js",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/account/account.component.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/homepage/homepage.component.jsx",["90"],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/config/configpage.component.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/leaderboard/leaderboardpage.component.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/wordGenerator/wordGenerator.component.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/hooks/useKeyPress.jsx",["91","92","93"],"import { useState, useEffect, useContext } from 'react'; \nimport { InitialModeContext } from '../context/initialModeContext';\n\nconst useKeyPress = callback => {\n  var tabPressed = false\n  var enterPressed = false\n\n  /* \n  useState hook is used here so whenever the user pressed a key, we will trigger the setter function, 'setKeyPressed'\n  we will also track the current key being pressed by storing it in, 'keyPressed'\n  */\n\n  const [keyPressed, setKeyPressed] = useState();\n  const [isStarted, setIsStarted] = useContext(InitialModeContext); \n\n  useEffect(() => {\n    const downHandler = ({ key }) => {\n\n      /* \n      console.log(key.length)\n      The way we can differentiate an 'alphabet or numeric button' press vs 'shift, ctrl, enter etc.' \n      is by tracking the key.length value. \n      Alphabet and numeric buttons will output key.length values == 1\n      Compared to ctrl, shift etc => 1\n      */\n      if (keyPressed !== key && key.length ===1){\n        // console.log(key, key.length)\n        setIsStarted(true); \n        setKeyPressed(key);\n        callback && callback(key)\n      }\n      \n      if (key === 'Tab') {\n        tabPressed = true;\n        console.log('tabPressed', tabPressed)\n      }\n      if (key === 'Enter'){\n        enterPressed = true;\n        console.log('enterPressed', enterPressed)\n      }\n\n      if (tabPressed === true && enterPressed === true){\n        console.log('both tab and enter key pressed')\n      }\n    };\n\n    const upHandler = ({key}) => {\n      setKeyPressed(null); \n      if (key === 'Tab') {\n        tabPressed = false;\n      }\n      if (key === 'Enter'){\n        enterPressed = false;\n      }\n    };\n\n    window.addEventListener('keydown', downHandler);\n    window.addEventListener('keyup', upHandler);\n\n    /* \n    in the return statement we want to add the removeEventListener function \n    to ensure that anytime an EventListener is added, it is also removed to \n    avoid slowing down the app.  \n    */\n    return () => {\n      window.removeEventListener('keydown', downHandler);\n      window.removeEventListener('keyup', upHandler);\n    };\n  });\n\n  return keyPressed;\n};\n\nexport default useKeyPress; ","/Users/andrew.b.truong/Development/a-dull-boy-types/src/utils/time.js",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/pages/homepage/homepage.styled.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/wordGenerator/badWordGenerator.component.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/nsfwButton/nsfwButton.component.jsx",["94","95"],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/redoButton/redoButton.component.jsx",[],["96","97"],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/components/timer/timer.component.jsx",["98"],"import React, { useState, useEffect, useContext } from 'react'; \nimport { InitialModeContext } from '../../context/initialModeContext';\n\nconst Timer = () => {\n\n  const [counter, setCounter] = useState('60');\n  const [isStarted, setIsStarted] = useContext(InitialModeContext);\n\n  useEffect(() => {\n\n    if (isStarted === true ){\n      counter > 0 && setTimeout(() => setCounter(counter - 1), 1000);\n    }\n  }, [counter, isStarted]);\n\n  return(\n    <div> \n      <h1> {counter} </h1>\n    </div>\n  )\n}\n\nexport default Timer;","/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/initialModeContext.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/sfwModeContext.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/wordContext.jsx",[],"/Users/andrew.b.truong/Development/a-dull-boy-types/src/context/initialStateContext.jsx",[],{"ruleId":"99","severity":1,"message":"100","line":13,"column":8,"nodeType":"101","messageId":"102","endLine":13,"endColumn":19},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","replacedBy":"106"},{"ruleId":"99","severity":1,"message":"107","line":4,"column":10,"nodeType":"101","messageId":"102","endLine":4,"endColumn":24},{"ruleId":"99","severity":1,"message":"108","line":14,"column":10,"nodeType":"101","messageId":"102","endLine":14,"endColumn":19},{"ruleId":"109","severity":1,"message":"110","line":34,"column":22,"nodeType":"111","endLine":34,"endColumn":26},{"ruleId":"109","severity":1,"message":"112","line":38,"column":24,"nodeType":"111","endLine":38,"endColumn":28},{"ruleId":"109","severity":1,"message":"113","line":17,"column":25,"nodeType":"114","endLine":17,"endColumn":39},{"ruleId":"99","severity":1,"message":"115","line":25,"column":7,"nodeType":"101","messageId":"102","endLine":25,"endColumn":22},{"ruleId":"103","replacedBy":"116"},{"ruleId":"105","replacedBy":"117"},{"ruleId":"99","severity":1,"message":"118","line":7,"column":21,"nodeType":"101","messageId":"102","endLine":7,"endColumn":33},"no-unused-vars","'Leaderboard' is defined but never used.","Identifier","unusedVar","no-native-reassign",["119"],"no-negated-in-lhs",["120"],"'SfwModeContext' is defined but never used.","'isStarted' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'tabPressed' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","Assignments to the 'enterPressed' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Assignments to the 'setInitialValue' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'setInitialValue' is assigned a value but never used.",["119"],["120"],"'setIsStarted' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]